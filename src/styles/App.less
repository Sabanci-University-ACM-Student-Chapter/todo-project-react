@bgb : #CCE8FE;
@pnc: #92a4b4;
@phb: white;
@phh: #4BA5FF;
@font: 'Roboto', sans-serif;

* {
    padding: 0;
    margin: 0;
    overflow: hidden;
    overflow-y: none;
    font-family: 'Roboto', sans-serif;
    outline: hidden;
    
}

textarea {
  outline: none;
  overflow: hidden;
}


body {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: auto 0;
    background-color: #8BC6EC;
    background-image: linear-gradient(135deg, #8BC6EC 0%, #9599E2 100%);
  }
  
  .App {
    width: 1050px;
    height: 780px;
    background-color: white;
    display: grid;
    grid-template-columns: 250px 800px;
    grid-template-areas: "A B"
                         "A B"
                         "A B";
    border-radius: 25px;
  }
  
.SideBar {
    grid-area: A;
    display: grid;
    // grid-template-columns: ;
    grid-template-rows: 60px 620px 1fr;
    grid-template-areas:"C"
                        "A"
                        "D";
    align-items: center;
    justify-items: center;
    background-color: @bgb;
    font-family:@font;


    .SideBarTitle {
        text-align: center;
        grid-area: C;
        // transform: translate(30px,15px);
        // font-family: 'Roboto', sans-serif;
    }
   
    .controlPanel {
        grid-area: A;
        display: grid;
        justify-content: center;
        grid-template-columns: 230px 20px;
        grid-template-areas: "A A"
                             "B C";
        margin-top: 5px;
        height: 100%;
        .controlTab {
          grid-area: A;
        }
        .todos {
          grid-area: B;
          overflow-y: scroll;
          &::-webkit-scrollbar {
            display: none;
        }
        }
    }
    
  
    .addProject {
        grid-area: D;
    }
}



.SideBarScroll {
  text-align: center;
  align-self: center;
  justify-self: center;
    grid-area: C;
  height: 0%;
  width: 6px;
  border-radius: 3px;
  background-color: rgb(63, 187, 236);
  animation: progress 1s linear;
  transform: none;
}

@keyframes progress {
  to {
    background-color: #114dce;
    background-image: linear-gradient(19deg, #34a8c4 0%, #B721FF 100%);    
    height: 100%;
  }
}
:root * {

  /* Pause the animation */
  animation-play-state: paused;
  /* Bind the animation to scroll */
  animation-delay: calc(var(--scroll) * -0.1s);
  /* These last 2 properites clean up overshoot weirdness */
  animation-iteration-count: 1;
  animation-fill-mode: both;
}

.tabContainer {
  display: grid;
  grid-template-columns: 50px 180px;
  align-items: center;
  text-align:right;
  width: 250px;
  height: 50px;
  transition: 0.5s;
  font-size: 14px;
  p:last-child {
      text-align: left;
      transform: translateX(+20px);
  }
  &:hover {
      padding-top: 5px;
      padding-bottom: 5px;
  }
}

.icon {
  height: 20px;
  width: 20px;
}

.projectName {
  padding: 5px 0;
  transform: translateX(30px);
  color: @pnc;
  text-transform: uppercase;
}

.AddProject {
  grid-area: D;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: @font;
  height: 100%;
  width: 100%;
  cursor: pointer;
  
  .addButton {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 50px;
      width: 50px;
      font-size: 50px;
      font-weight: 300;
      color: white;
      background-color: @phh;
      border-radius: 999px;
      box-shadow: 0 0 4px 2px @phh;
      transition: 0.3s;
      &:hover {
          box-shadow: 0 0 6px 3px rgb(109, 153, 247);
          width: 55px;
          height: 55px;
          font-size: 60px;
      }
      p {
          transform: translateY(-1px);
          // &:hover {
          //     font-size: 80px;
          // }
      }
  }
}

.ProjectPage {
  display: grid;
  grid-template-rows: 160px 550px 70px;
  grid-template-areas: "A"
                       "B"
                       "C";
  justify-content: center;
  align-content: center;
}

.PageHeader {
  grid-area: A;
  display: grid;
  grid-template-columns: 650px 150px;
  grid-template-rows: 50px 100px;
  align-items: flex-end;
  grid-template-areas: "A B"
                       "C B";
  // background-color: @phb;
  border-bottom: 1px solid @bgb;
  padding: 0;
  background-image: url("../assets/bg2.png");
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: 350px 0;
  background-size: cover;
  
  h4 {
  margin-left: 20px;
  grid-area: A;
  color: @phh;
  }

  h1 {
      margin-left: 30px;
      font-size: 50px;
      grid-area: C;
      transform: translateY(-20px);
  }

}

.minInfo {
  grid-area: B;
  height: 60%;
  margin-top: 20px;
  align-self: flex-start;
  color: @pnc;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-evenly;

}

.NoteDesc {
  display: grid;
  justify-items: center;
  align-items: center;
  grid-template-columns: 760px 40px;
  grid-template-areas: "A B";


  .noteArea {
      border: none;
      border-radius: 15px;
      padding-top: 10px;
      grid-area: A;
      width: 98%;
      height: 96%;
      background-color: white;
      overflow-y: scroll;
      resize: none;
      font-size: 18px;
      margin-left: 45px;
      &::-webkit-scrollbar {
          display: none;
      }
  }}
  .NoteScroll {
      grid-area: B;
      height:0%;
      width: 6px;
      border-radius: 3px;
      background-color: rgb(0, 183, 255);
      animation: scrollanimation 1s linear;
      transform: translateX(6px);

  }

  @keyframes scrollanimation {
  to {
      background-color: #0082de;
      background-image: linear-gradient(180deg, #0082de 0%, #FC00FF 100%);
      height: 100%;
      }
  }
  :root .NoteScroll {

  /* Pause the animation */
  animation-play-state: paused;
  /* Bind the animation to scroll */
  animation-delay: calc(var(--scrollnote) * -0.1s);
  /* These last 2 properites clean up overshoot weirdness */
  animation-iteration-count: 1;
  animation-fill-mode: both;
  }

  .mainIconControl {
    grid-area: B;
    display: grid;
    grid-template-columns: 35px 1fr ;
    grid-template-areas:"A B" ;
    align-items: center;
    height: 35px;
    width: 35px;
    border-radius: 10px;
    transition: 1s;
    &:hover {
        width: 100px;
    p {
        visibility: visible;
        grid-area: B;

    }
    }
    p {
        display: inline-block;
        padding: 10px;
        visibility: hidden;
        text-align: center;
    }
    .icon {
    height: 20px;
    width: 20px;
    }

    .PageIcon {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 35px;
        height: 35px;
        border-radius: 10px;
    }
}

.PageControl {
  grid-area: C;
  display: flex;
  justify-content: space-evenly;
  margin-left: 30px;
  transition: 1s;
}

.TodoContainer {
  font-size: large;
  display: grid;
  grid-template-rows: 50px;
  grid-template-columns: 50px 730px;
  justify-items: flex-start;
  align-items: center;
  grid-template-areas: "A B";
  label {
    grid-area: B;
  }
  .Detail {
    grid-area: B;
    justify-self: flex-end;
    display: grid;
    grid-template-columns: 1fr 30px;
    .icon {
      justify-self: center;
    }
  }
  .custimizedCheckBox {
    grid-area: A;
    justify-self: center;
  }
  
}

.checked {
  // text-decoration: line-through;
  color: grey;
  label {
    text-decoration: line-through;
  }
}

.addTodoPage {
  height: 300px;
  display: flex;
  flex-wrap: nowrap;
  flex-direction: column;
  align-items: flex-start;
  transform: translateX(20px);
  justify-content: space-evenly;
  label {
    font-size: large;
    font-weight: bold;
  }
  input,select {
    padding: 5px 0;
    width: 210px;
    font-size: medium;
    padding-left: 4px;

  }
  select {
    width: 218px;
  }
  div {
    display: flex;
    width: 500px;
    justify-content: space-between;
    color: @phh;
  }
}

.Project {
  display: grid;
  justify-items: center;
  align-items: center;
  height: 630px;
  grid-template-columns: 780px 20px;
  grid-template-areas: "A B";
  h2 {
    color: @phh;
    margin-left: 10px;
    margin-top: 10px
  }
  .ProjectTabs {
    grid-area: A;
    overflow-y: scroll;
    height: 100%;
  }
  .ProjectName {
    width: 775px;
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }
  .ProjectTabs::-webkit-scrollbar {
    display: none;
}}
.ProjectScroll {
  grid-area: B;
  height: 0%;
  width: 6px;
  border-radius: 3px;
  background-color: #0082de;
  // background-color: red;
  animation: scrollanimation2 1s linear;
}

:root .ProjectScroll {
  animation-delay: calc(var(--projectscroll) * -0.1s);
  animation-play-state: paused;
  /* Bind the animation to scroll */
  /* These last 2 properites clean up overshoot weirdness */
  animation-iteration-count: 1;
  animation-fill-mode: both;
  }

@keyframes scrollanimation2 {
to {
  background-color: #0082de;
  background-image: linear-gradient(180deg, #0082de 0%, #FC00FF 100%);
  height: 100%;
  }
}

.InboxScroll {
  grid-area: B;
  height: 0%;
  width: 6px;
  border-radius: 3px;
  background-color: #0082de;
  // background-color: red;
  animation: scrollanimation2 1s linear;
}

:root .InboxScroll {
  animation-delay: calc(var(--inboxscroll) * -0.1s);
  animation-play-state: paused;
  /* Bind the animation to scroll */
  /* These last 2 properites clean up overshoot weirdness */
  animation-iteration-count: 1;
  animation-fill-mode: both;
  }

  .TodayScroll {
    grid-area: B;
    height: 0%;
    width: 6px;
    border-radius: 3px;
    background-color: #0082de;
    // background-color: red;
    animation: scrollanimation2 1s linear;
  }
  
  :root .TodayScroll {
    animation-delay: calc(var(--todayscroll) * -0.1s);
    animation-play-state: paused;
    /* Bind the animation to scroll */
    /* These last 2 properites clean up overshoot weirdness */
    animation-iteration-count: 1;
    animation-fill-mode: both;
    }
  
    .UpcomingScroll {
      .InboxScroll
    }
    
    :root .UpcomingScroll {
      animation-delay: calc(var(--upcomingscroll) * -0.1s);
      animation-play-state: paused;
      /* Bind the animation to scroll */
      /* These last 2 properites clean up overshoot weirdness */
      animation-iteration-count: 1;
      animation-fill-mode: both;
      }

      .CompletedScroll {
        .InboxScroll
      }
      
      :root .CompletedScroll {
        animation-delay: calc(var(--completedscroll) * -0.1s);
        animation-play-state: paused;
        /* Bind the animation to scroll */
        /* These last 2 properites clean up overshoot weirdness */
        animation-iteration-count: 1;
        animation-fill-mode: both;
        }

.actualContainer {
  background-color: #9599e23f;
}


